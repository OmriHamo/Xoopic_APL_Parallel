comments
{   
XY simulation
// The program might CRASH! first, you need to disable the rho calculation and the field solver!
// In order to enable file writing, go to sptlrgn.cpp , search for a shaded code with "fprintf" and unshade it
// note that the file is written BACKWARDS (for some reaons)
}

Variables
{
  current = 4e-11*1000// [A]
  ElectronEmitEV= 4 // [eV] (1/2 of kinetic energy which is assumed 8 eV)
  Bmax1=0.04 // The peak value of the magnetic field [T]

  t0_B=1e-6 // ignition time for the B field (linear saturation profile)
  dPhi=100 //  [V] The potential drop
  np2c_gen=1
  Lx=4e-3
  //Ly=0.094
  Ly=8e-3
  eps0=8.85418781762e-12
  PI2=6.283185307179586
  X0=0.002
  Y0=0.002
  alpha=pow(10,3)
  A_exp=100000
//----------------------------------------------
  numCellsX = 64      // # of cells along horizontal axis 
  numCellsY =  128    // # of cells along vertical   axis

  XminMKS=0
  XMaxMKS = Lx   // length of horizontal axis [m]
  dx=(XMaxMKS-XminMKS)/numCellsX // [m]
  //start_pos = 0e-3
  YminMKS = -Ly/2 // from 6 deg angle requirement for R_avg=15[mm]
  YMaxMKS = Ly/2  // 
  dY = (YMaxMKS-YminMKS)/numCellsY // [m]
  density_xenon=20e19 //[m^3] (x=0 value for the exponent drop)
  XminGAS_1=5e-5  // minimum X location of neutrals (ad hoc)
  XmaxGAS_1=4e-3-5e-5 // maximum X location of neutrals (ad hoc)
  lambda=0 // [1/m]. exponential decay constant of n0(x)

}
Region 
{
 Grid
 {
	J = numCellsX
	x1s = XminMKS
	x1f = XMaxMKS
	n1 = 1.2
	K = numCellsY
	x2s = YminMKS
	x2f = YMaxMKS
	n2 = 1.3
	Geometry = 1 // 0 for cylindrical, 1 for cartesian
	PeriodicFlagX1 = 0
	PeriodicFlagX2 = 1 // periodic BC in y("teta")
	Rule
	{
	 Limit
	 n1 < 0.25
	 Fatal -- n1 < 0.25 grid spacing too nonuniform to ensure accuracy
	}
	Rule
	{
	 Algebra
	 J * K > 10000
	 Warning -- J*K >= 10000 may mean memory problems!
	}
 }
 Control
 {
	dt = 1E-12 // [s]
	NonRelativisticFlag=1 // for convinient comparison with matlab
	ElectrostaticFlag = 4 //field solver.  0=EM solver, 1 = electrostatic DADI. periodic BC works only with 1 or 4(Multigrid)
	presidue = 1e-6 // Poisson solver convergence param

	B03 =Bmax1//[T]
	//B03analytic =Bmax*(-5.8690*pow(x1/XMaxMKS,4)+8.9248*pow(x1/XMaxMKS,3)-3.7834*pow(x1/XMaxMKS,2)+1.5227*pow(x1/XMaxMKS,1)+0.0113)//[T]

}

//Species
//{
//	name = Xenon+
//     m = 2.2112e-25 //[kg]
//     q = 1.6e-19 // [C]
//     collisionModel = 2 // ion collision
//     subcycle = 1 // Num oevaluatorf field advances per particle advance (>1)
//}


Species
{
        name = posetron
        m = 9.11e-31 // [kg]
        q = 1.6e-19 // [C]
	collisionModel = 0 // e collision
        subcycle = 1 // Num of field advances per particle advance (>1)
}

//MCC //defining Xenon as the neutral gas
//{
//	gas = Xe // Xenon density at 0 Â°C, 101.325 kPa is 5.894 g/L. read from data
//	eSpecies = electron
//	iSpecies = Xenon+
//
//      //analyticF = density_xenon*(step(x1-XminGAS_1)*step(XMaxMKS-x1)) // neutral disribution
//         
//	analyticF = density_xenon*(step(x1-XminGAS_1)*step(XMaxMKS-x1))*exp(-lambda*x1/XMaxMKS) // neutral disribution
//
//	discardDumpFileNGDDataFlag=1 // don't save data about neutrals
//}


Equipotential
{
        name = anode
        C = dPhi
	j1 = 0
	k1 = 0
	j2 = 0
	k2 = numCellsY
	normal = 1
        IdiagFlag = 1          // Turn on energy and current diagnostics
        reflection=0
  }


BeamEmitter
{
	name = posetron emitter 
        units=MKS

	j1 = numCellsX/2
	k1 = numCellsY/4
	j2 = numCellsX/2
	k2 = numCellsY/4
	speciesName = posetron
	normal = 1//left
        //nEmit=0//determine N by teh curretn and NP2C
	np2c = np2c_gen
	I = current
        v1drift = 5000000
        IdiagFlag = 1          // Turn on energy and current diagnostics

 }



Equipotential
{
        name = exit plane and beam emitter
        C = 0
	j1 = numCellsX
	k1 = 0
	j2 = numCellsX
	k2 = numCellsY
	normal = -1
        IdiagFlag = 1          // Turn on energy and current diagnostics
        reflection=0
  }

 //Load
//	   //{
		//  units=MKS
		 // x1MinMKS = X0
		  //x1MaxMKS = X0+eps0
		  //x2MinMKS = Y0
		  //x2MaxMKS = Y0+eps0
		  //speciesName = posetron   
		  //v1drift=5000000
		  ////density = 1.0/pow(eps0,2)
		  //density = 1.0*10e15
		  ////density = 1.0*10e18
		  //np2c = np2c_gen
	// }

}

